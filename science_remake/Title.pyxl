Title
════════════════════════════════════════════════════════════════════════


frame
────────────────────────────────────────────────────────────────────────────

// Draw starry background, defined in background.pyxl
draw_background()
   
// Draw game title
// TODO draw game logo instead
// draw_text({font: instructionFont, text: "Borderlands Science Remake", pos: xy(0.5 * SCREEN_SIZE.x, 20), color: #f, x_align: "center"})
// TODO draw game logo instead
draw_sprite(spriteSheetLogo[0][1], xy(SCREEN_SIZE.x/2, 100), 0, nil, 1, 0, nil)


let title_palette = [#fece00, #ea690e, #ff00fc, #970ceb]

// Level selection
for p in [-1,0,1]:
   if p+level_index >= 0 && p+level_index < size(global_level_data):
      let posx = (p+2.0) / 4.0
      let item_pos = xy(posx * SCREEN_SIZE.x, 0.75 * SCREEN_SIZE.y) 
      let color = sample_palette((p+level_index) / size(global_level_data), title_palette)
      // let item_color = p == 0 ? color : #32143f/2
      let item_color = p == 0 ? #15e0f7 : #32143f/2
      let item_shadow = rgba(0,0,0,50%)
      let item_outline = p == 0 ? #0 : #0
      let item_text = p == 0 ? replace("[<] Level " + (p + level_index + 1) + " [>]", joy.prompt) : "Level " + (p + level_index + 1)
      draw_text(  instructionFont, item_text, item_pos, item_color, item_shadow, item_outline, "center", "baseline") 
      
draw_text(instructionFont, replace("Press (a)", joy.prompt), xy(0.5 * SCREEN_SIZE.x, 0.90 * SCREEN_SIZE.y), #f7aa00, rgba(0,0,0,50%), nil, "center", "baseline")

// If the controller presses left or right, change the selected level
if joy.xx > 0:
   // play_audio_clip(menuSound)
   level_index = (level_index + size(global_level_data) + 1) mod size(global_level_data)
   
if joy.xx < 0:
   // play_audio_clip(menuSound)
   level_index = (level_index + size(global_level_data) - 1) mod size(global_level_data)
   
// If the controller presses A, play the selected level
if joy.aa:
   // play_audio_clip(playSound)
   create_level(level_index)
   set_mode(Play) because "Level has been chosen"

